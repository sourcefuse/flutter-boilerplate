// Mocks generated by Mockito 5.4.4 from annotations
// in clean_arch/test/core/domain/usecases/add_item_usescase_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i3;

import 'package:clean_arch/core/data/dto/item_model.dart' as _i4;
import 'package:clean_arch/core/data/dto/item_request_model.dart' as _i5;
import 'package:clean_arch/core/domain/repositories/firebase_repository_contract.dart'
    as _i2;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

/// A class which mocks [FirebaseRepositoryContract].
///
/// See the documentation for Mockito's code generation for more information.
class MockFirebaseRepositoryContract extends _i1.Mock
    implements _i2.FirebaseRepositoryContract {
  MockFirebaseRepositoryContract() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<List<_i4.ItemModel>> getItems() => (super.noSuchMethod(
        Invocation.method(
          #getItems,
          [],
        ),
        returnValue: _i3.Future<List<_i4.ItemModel>>.value(<_i4.ItemModel>[]),
      ) as _i3.Future<List<_i4.ItemModel>>);

  @override
  _i3.Future<void> addItem(_i4.ItemModel? itemModel) => (super.noSuchMethod(
        Invocation.method(
          #addItem,
          [itemModel],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);

  @override
  _i3.Future<void> deleteItem(_i5.ItemRequestModel? itemRequestModel) =>
      (super.noSuchMethod(
        Invocation.method(
          #deleteItem,
          [itemRequestModel],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);

  @override
  _i3.Future<void> updateItem(_i5.ItemRequestModel? itemRequestModel) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateItem,
          [itemRequestModel],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);
}
